
const dotenv = require('dotenv')
dotenv.config()

let {
  ACME_CHALLENGE,
  ALLOWED_ADS_TOKENS,
  ALLOWED_PUBLISHERS_TOKENS,
  ALTCURRENCY,
  BALANCE_CACHE_TTL_S,
  BALANCE_TOKEN,
  BALANCE_URL,
  BAT_ADS_PAYOUT_ADDRESS,
  BAT_BALANCE_SERVER,
  BAT_EYESHADE_SERVER,
  BAT_GRANT_REDIS_URL,
  BAT_LEDGER_SERVER,
  BAT_MONGODB_URI,
  BAT_POSTGRES_URL,
  BAT_RATIOS_TOKEN,
  BAT_RATIOS_URL,
  BAT_REDIS_URL,
  BAT_SETTLEMENT_ADDRESS,
  BATUTIL_SPACES,
  CAPTCHA_BYPASS_TOKEN,
  CAPTCHA_TOKEN,
  CAPTCHA_URL,
  COINBASE_WIDGET_CODE,
  CRYPTO_CURRENCIES,
  DATABASE_URL,
  DYNO,
  ENABLE_ADS_PAYOUT,
  FIXIE_URL,
  FREEZE_SURVEYORS_AGE_DAYS,
  GITHUB_CLIENT_ID,
  GITHUB_CLIENT_SECRET,
  GITHUB_FORCE_HTTPS,
  GITHUB_LOGIN_BYE,
  GITHUB_LOGIN_WORLD,
  GITHUB_ORG,
  GRANT_CLAIM_RATE,
  GRANT_CLAIM_WINDOW,
  HEROKU_APP_NAME,
  HEROKU_SLUG_COMMIT,
  HOST,
  HTTPS_PROXY,
  IP_GRAYLIST,
  IP_QA_WHITELIST,
  IP_WHITELIST,
  IRON_KEYPASS,
  LEDGER_URL,
  MONGODB_URI,
  NEW_RELIC_APP_NAME,
  NEW_RELIC_LICENSE_KEY,
  NODE_ENV,
  PORT,
  PUBLISHERS_TAKEOVER,
  PUBLISHERS_TOKEN,
  PUBLISHERS_URL,
  REDEEMER_CARD_ID,
  REDEEMER_TOKEN,
  REDEEMER_URL,
  REDIS2_URL,
  REDIS_URL,
  REFERRALS_AMOUNT,
  REFERRALS_CURRENCY,
  REGISTRARS,
  SENTRY_DSN,
  SERVICE,
  SLACK_CHANNEL,
  SLACK_ICON_URL,
  SLACK_WEBHOOK,
  SURVEYOR_CRON_SCHEDULE,
  SURVEYORS,
  TESTING_COHORTS,
  TOKEN_LIST,
  UPHOLD_ACCESS_TOKEN,
  UPHOLD_CLIENT_ID,
  UPHOLD_CLIENT_SECRET,
  UPHOLD_DONOR_CARD_ID,
  UPHOLD_ENVIRONMENT,
  VOTING_COHORTS,
  YOUTUBE_API_KEY,
  YOUTUBE_API_BASE_URI
} = process.env

if (FIXIE_URL && !HTTPS_PROXY) {
  HTTPS_PROXY = FIXIE_URL
  process.env.HTTPS_PROXY = HTTPS_PROXY
}

const ports = {
  ledger: 3001,
  eyeshade: 3002,
  balance: 3003
}

let extension = {}
if (SERVICE) {
  PORT = PORT || ports[SERVICE]
  process.env.PORT = PORT

  const serviceUpperCase = SERVICE.toUpperCase()
  const prefixableEnvVars = ['MONGODB_URI', 'GITHUB_CLIENT_ID', 'GITHUB_CLIENT_SECRET', 'SLACK_CHANNEL', 'SLACK_ICON_URL']
  extension = prefixableEnvVars.reduce((memo, v) => {
    memo[v] = process.env[v] || process.env[serviceUpperCase + '_' + v]
    process.env[v] = memo[v]
    return memo
  }, {})
}

module.exports = Object.assign(extension, {
  ACME_CHALLENGE,
  ALLOWED_ADS_TOKENS,
  ALLOWED_PUBLISHERS_TOKENS,
  ALTCURRENCY,
  BALANCE_CACHE_TTL_S,
  BALANCE_TOKEN,
  BALANCE_URL,
  BAT_ADS_PAYOUT_ADDRESS,
  BAT_BALANCE_SERVER,
  BAT_EYESHADE_SERVER,
  BAT_GRANT_REDIS_URL,
  BAT_LEDGER_SERVER,
  BAT_MONGODB_URI,
  BAT_POSTGRES_URL,
  BAT_RATIOS_TOKEN,
  BAT_RATIOS_URL,
  BAT_REDIS_URL,
  BAT_SETTLEMENT_ADDRESS,
  BATUTIL_SPACES,
  CAPTCHA_BYPASS_TOKEN,
  CAPTCHA_TOKEN,
  CAPTCHA_URL,
  COINBASE_WIDGET_CODE,
  CRYPTO_CURRENCIES,
  DATABASE_URL,
  DYNO,
  ENABLE_ADS_PAYOUT,
  FIXIE_URL,
  FREEZE_SURVEYORS_AGE_DAYS,
  GITHUB_CLIENT_ID,
  GITHUB_CLIENT_SECRET,
  GITHUB_FORCE_HTTPS,
  GITHUB_LOGIN_BYE,
  GITHUB_LOGIN_WORLD,
  GITHUB_ORG,
  GRANT_CLAIM_RATE,
  GRANT_CLAIM_WINDOW,
  HEROKU_APP_NAME,
  HEROKU_SLUG_COMMIT,
  HOST,
  HTTPS_PROXY,
  IP_GRAYLIST,
  IP_QA_WHITELIST,
  IP_WHITELIST,
  IRON_KEYPASS,
  LEDGER_URL,
  MONGODB_URI,
  NEW_RELIC_APP_NAME,
  NEW_RELIC_LICENSE_KEY,
  NODE_ENV,
  PORT,
  PUBLISHERS_TAKEOVER,
  PUBLISHERS_TOKEN,
  PUBLISHERS_URL,
  REDEEMER_CARD_ID,
  REDEEMER_TOKEN,
  REDEEMER_URL,
  REDIS2_URL,
  REDIS_URL,
  REFERRALS_AMOUNT,
  REFERRALS_CURRENCY,
  REGISTRARS,
  SENTRY_DSN,
  SERVICE,
  SLACK_CHANNEL,
  SLACK_ICON_URL,
  SLACK_WEBHOOK,
  SURVEYOR_CRON_SCHEDULE,
  SURVEYORS,
  TESTING_COHORTS,
  TOKEN_LIST,
  UPHOLD_ACCESS_TOKEN,
  UPHOLD_CLIENT_ID,
  UPHOLD_CLIENT_SECRET,
  UPHOLD_DONOR_CARD_ID,
  UPHOLD_ENVIRONMENT,
  VOTING_COHORTS,
  YOUTUBE_API_KEY,
  YOUTUBE_API_BASE_URI
})
