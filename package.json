{
  "name": "bat-ledger",
  "version": "0.9.0",
  "description": "A BAT micropayments system for users and publishers.",
  "main": "index.js",
  "scripts": {
    "ava": "ava",
    "balance-server": "node --optimize_for_size --max_old_space_size=460 --gc_interval=100 balance/server.js",
    "eyeshade-server": "node --optimize_for_size --max_old_space_size=460 --gc_interval=100 eyeshade/server.js",
    "eyeshade-consumer": "node --optimize_for_size --max_old_space_size=460 --gc_interval=100 eyeshade/consumer.js",
    "eyeshade-producer": "node --optimize_for_size --max_old_space_size=460 --gc_interval=100 bin/migrate-mongo-to-kafka.js",
    "ledger-server": "node --optimize_for_size --max_old_space_size=460 --gc_interval=100 ledger/server.js",
    "start": "echo use 'npm run start-[ledger|eyeshade|balance]' or 'npm run start-[ledger|eyeshade]-worker'",
    "start-balance": "NODE_PATH=. DEBUG=*,-mongo:*,mongo:queries SERVICE=balance node balance/server.js",
    "start-eyeshade": "NODE_PATH=. DEBUG=*,-mongo:*,mongo:queries SERVICE=eyeshade node eyeshade/server.js",
    "start-eyeshade-consumer": "NODE_PATH=. DEBUG=*,-mongo:*,mongo:queries SERVICE=eyeshade node --optimize_for_size --max_old_space_size=460 --gc_interval=100 eyeshade/consumer.js",
    "start-ledger": "NODE_PATH=. DEBUG=*,-mongo:*,mongo:queries SERVICE=ledger node ledger/server.js",
    "test": "nyc --reporter=html --reporter=text npm run test-all",
    "coverage": "nyc report --reporter=text-lcov",
    "test-all": "npm run test-isup && npm run test-unit && npm run test-integration",
    "test-isup": "ava -v -s test/isup.integration.test.js",
    "docker-test": "docker-compose run --rm -v $(pwd)/test:/usr/src/app/test -v $(pwd)/eyeshade:/usr/src/app/eyeshade -v $(pwd)/ledger:/usr/src/app/ledger -v $(pwd)/bat-utils:/usr/src/app/bat-utils ledger-web npm run test",
    "mongo-reset": "docker exec -it ledger-mongo mongo eyeshade --eval \"db.dropDatabase()\" && docker exec -it ledger-mongo mongo ledger --eval \"db.dropDatabase()\"",
    "lint": "npx standard",
    "lint-fix": "npm run lint -- --fix",
    "security": "npm run lint && npm run moderate-audit",
    "moderate-audit": "npm audit --audit-level=moderate; echo $?",
    "test-integration": "ava -v -s test/*/*.integration.test.js",
    "test-grant": "ava -v -s test/ledger/grants.integration.test.js",
    "test-suggestions": "ava -v -s test/eyeshade/suggestions.integration.test.js",
    "test-unit": "ava -v -s bat-utils/**/*.test.js ledger/**/*.test.js eyeshade/*/*.test.js",
    "docker-reset": "docker-compose down && docker rmi $(docker images -a -q) --force",
    "docker-build": "docker-compose build",
    "docker-up": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up $npm_package_config_dockerservices",
    "docker-up-dev": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up $npm_package_config_dockerservices $npm_package_config_dockermonitors",
    "docker-up-dbs": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d --remove-orphans $npm_package_config_dbs",
    "docker-up-detached": "docker-compose up -d $npm_package_config_dockerservices",
    "docker-migrate-dbs": "npm run docker-up-dbs && npm run docker-migrate && npm run docker-seed-dbs",
    "docker-migrate": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml run --rm -w /usr/src/app/eyeshade eyeshade-web ./bin/migrate-up.sh",
    "docker-seed-dbs": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml run --rm -w /usr/src/app/eyeshade eyeshade-web sh ./bin/seed.sh",
    "docker-migrate-down": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml run --rm -w /usr/src/app/eyeshade eyeshade-web sh ./bin/migrate-down-all.sh",
    "docker-log-detached": "docker-compose logs",
    "postinstall": "test -e .git && { for file in `ls .git-hooks`; do ln -sf ../../.git-hooks/${file} .git/hooks/${file}; done } || true"
  },
  "config": {
    "dockermonitors": "prometheus grafana",
    "dockerservices": "eyeshade-web eyeshade-consumer grant-web",
    "dbs": "eyeshade-postgres grant-postgres challenge-bypass-postgres"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/brave-intl/bat-ledger.git"
  },
  "author": "Brave Developers <support@brave.com>",
  "license": "MPL-2.0",
  "bugs": {
    "url": "https://github.com/brave-intl/bat-ledger/issues"
  },
  "homepage": "https://github.com/brave-intl/bat-ledger",
  "dependencies": {
    "@hapi/bell": "^12.1.1",
    "@hapi/boom": "^9.1.0",
    "@hapi/cookie": "^11.0.2",
    "@hapi/cryptiles": "^5.1.0",
    "@hapi/hapi": "^20.0.2",
    "@hapi/inert": "^6.0.3",
    "@hapi/vision": "^6.0.1",
    "@hapi/wreck": "^17.0.0",
    "@sentry/node": "^5.27.4",
    "@uphold/uphold-sdk-javascript": "^2.4.0",
    "accept-language-parser": "^1.5.0",
    "avro-js": "^1.10.0",
    "bat-utils": "file:bat-utils",
    "bignumber.js": "^9.0.1",
    "bitcoinjs-lib": "^5.2.0",
    "bluebird": "^3.7.2",
    "bs58check": "^2.1.2",
    "bson": "^4.2.0",
    "country-list": "^2.2.0",
    "cron-parser": "^2.17.0",
    "currency-codes": "^2.1.0",
    "dotenv": "^8.2.0",
    "ethereum-address": "0.0.4",
    "hapi-auth-bearer-token": "^8.0.0",
    "hapi-require-https": "^5.0.0",
    "http-request-signature": "0.0.4",
    "joi": "^17.3.0",
    "moment": "^2.29.1",
    "monotonic-timestamp": "0.0.9",
    "netmask": "^1.0.6",
    "node-slack": "0.0.7",
    "nyc": "^15.1.0",
    "pg": "^8.5.1",
    "prom-client": "^12.0.0",
    "proxy-agent": "^4.0.0",
    "rate-limiter-flexible": "^2.1.13",
    "redis": "^3.0.2",
    "sinek": "^10.0.0-alpha.0",
    "tldjs": "^2.3.1",
    "tweetnacl": "^1.0.3",
    "underscore": "^1.11.0",
    "uuid": "^8.3.1",
    "validate-ip-node": "^1.0.6"
  },
  "engines": {
    "node": "^14.15",
    "npm": "^6.14.8"
  },
  "devDependencies": {
    "ava": "^3.13.0",
    "standard": "^16.0.2",
    "supertest": "^6.0.1"
  },
  "standard": {
    "ignore": [
      "config.js",
      "bat-utils/config/config.*"
    ]
  },
  "nyc": {
    "per-file": true,
    "all": true,
    "watermarks": {
      "lines": [
        90,
        100
      ],
      "functions": [
        90,
        100
      ],
      "branches": [
        90,
        100
      ],
      "statements": [
        90,
        100
      ]
    },
    "include": [
      "eyeshade/**/*.js",
      "ledger/**/*.js",
      "balance/**/*.js",
      "bat-utils/**/*.js"
    ],
    "reporter": [
      "lcov",
      "text-summary"
    ]
  }
}
