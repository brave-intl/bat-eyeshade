{
  "name": "bat-ledger",
  "version": "0.9.0",
  "description": "A BAT micropayments system for users and publishers.",
  "main": "index.js",
  "scripts": {
    "balance-server": "node dist/balance/server",
    "build": "npm run copy-package-json && npm i && tsc && npm run copy-migrations",
    "build-balance": "tsc",
    "build-extras": "tsc",
    "make-dist": "mkdir -p dist/bat-utils/",
    "make-migrations-folder": "mkdir -p dist/eyeshade/migrations/",
    "build-eyeshade": "tsc && npm run copy-migrations",
    "copy-migrations": "npm run make-migrations-folder && cp -R eyeshade/migrations/* dist/eyeshade/migrations/",
    "copy-package-json": "npm run make-dist && cp bat-utils/package.json dist/bat-utils/package.json",
    "build-ledger": "tsc",
    "build-utils": "tsc",
    "eyeshade-server": "node dist/eyeshade/server",
    "eyeshade-worker": "node dist/eyeshade/worker",
    "heroku-postbuild": "npm run build",
    "ledger-server": "node dist/ledger/server",
    "ledger-worker": "node dist/ledger/worker",
    "start": "npm run build && echo use 'npm run [ledger|eyeshade|balance]-server' or 'npm run [ledger|eyeshade]-worker'",
    "test": "nyc --reporter=html --reporter=text npm run test-all",
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "test-all": "npm run test-unit && npm run test-integration",
    "docker-test": "tsc && docker-compose run --rm -v $(pwd)/dist:/usr/src/app/dist ledger-web npm run test",
    "mongo-reset": "docker exec -it ledger-mongo mongo eyeshade --eval \"db.dropDatabase()\" && docker exec -it ledger-mongo mongo ledger --eval \"db.dropDatabase()\"",
    "redis-flush": "docker exec -it grant-redis redis-cli flushdb",
    "db-reset": "npm run mongo-reset && npm run redis-flush",
    "lint": "standard *.ts",
    "lint-fix": "npm run lint -- --fix",
    "security": "npm run lint && npm audit",
    "test-integration": "ava -v -s dist/test/*/*.integration.test.js && ava -v dist/test/e2e.integration.test.js",
    "test-unit": "ava -v dist/bat-utils/**/*.test.js",
    "docker-reset": "docker-compose down && docker rmi $(docker images -a -q) --force",
    "docker-build": "npm run build && docker-compose build",
    "docker-up": "docker-compose up $npm_package_config_dockerservices",
    "docker-up-dev": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up $npm_package_config_dockerservices $npm_package_config_dockermonitors",
    "docker-up-detached": "docker-compose up -d $npm_package_config_dockerservices",
    "docker-migrate-up": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml run --rm -w /usr/src/app/eyeshade eyeshade-worker ./bin/migrate-up.sh",
    "docker-migrate-down": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml run --rm -w /usr/src/app/eyeshade eyeshade-worker ./bin/migrate-down.sh",
    "docker-migrate-down-all": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml run --rm -w /usr/src/app/eyeshade eyeshade-worker bash ./bin/migrate-down-all.sh",
    "docker-log-detached": "declare -a array=(\"$npm_package_config_dockerservices\"); { for item in $array; do echo ${item} && docker logs ${item}; done }",
    "postinstall": "test -e .git && { for file in `ls .git-hooks`; do ln -sf ../../.git-hooks/${file} .git/hooks/${file}; done } || true"
  },
  "config": {
    "dockermonitors": "prometheus grafana",
    "dockerservices": "balance-web ledger-web ledger-worker eyeshade-web eyeshade-worker grant-web"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/brave-intl/bat-ledger.git"
  },
  "author": "Brave Developers <support@brave.com>",
  "license": "MPL-2.0",
  "bugs": {
    "url": "https://github.com/brave-intl/bat-ledger/issues"
  },
  "homepage": "https://github.com/brave-intl/bat-ledger",
  "dependencies": {
    "@octokit/rest": "^15.5.1",
    "@sentry/node": "^4.1.1",
    "@uphold/uphold-sdk-javascript": "^2.2.1",
    "accept-language-parser": "1.4.1",
    "bat-publisher": "^2.0.24",
    "bat-utils": "file:./dist/bat-utils",
    "bell": "8.7.0",
    "bignumber.js": "^4.1.0",
    "bitcoinjs-lib": "^3.2.0",
    "bluebird": "3.5.0",
    "boom": "5.2.0",
    "bs58check": "^2.0.2",
    "bson": "1.0.5",
    "country-list": "1.1.0",
    "cron-parser": "2.4.1",
    "cryptiles": "4.1.2",
    "currency-codes": "1.1.2",
    "dotenv": "^4.0.0",
    "epimetheus": "1.0.55",
    "ethereum-address": "0.0.4",
    "exposition": "^1.2.0",
    "gridfs-stream": "1.1.1",
    "hapi": "^16.6.3",
    "hapi-async-handler": "^1.0.3",
    "hapi-auth-bearer-token": "^5.1.0",
    "hapi-auth-cookie": "7.0.0",
    "hapi-rate-limiter": "github:brave/hapi-rate-limiter",
    "hapi-require-https": "2.1.0",
    "hapi-swagger": "github:brave/hapi-swagger",
    "http-request-signature": "0.0.2",
    "inert": "^4.2.1",
    "joi": "^11.0.3",
    "moment": "^2.22.1",
    "mongodb": "^2.2.35",
    "monk": "6.0.5",
    "monotonic-timestamp": "0.0.9",
    "netmask": "1.0.6",
    "newrelic": "^4.1.1",
    "node-anonize2-relic": "0.1.6",
    "node-slack": "0.0.7",
    "pg": "^7.4.3",
    "prom-client": "10.2.2",
    "proxy-agent": "^2.3.1",
    "redis": "^2.8.0",
    "rsmq": "^0.8.2",
    "rsmq-worker": "^0.5.2",
    "sdebug": "^0.9.5",
    "tldjs": "2.2.0",
    "tweetnacl": "^1.0.0",
    "underscore": "1.8.3",
    "uuid": "3.1.0",
    "validate-ip-node": "1.0.6",
    "vision": "^4.1.1",
    "wreck": "13.0.1"
  },
  "engines": {
    "node": "8.9.2",
    "npm": "5.10.0"
  },
  "devDependencies": {
    "@types/node": "^11.13.10",
    "@typescript-eslint/eslint-plugin": "^1.9.0",
    "@typescript-eslint/parser": "^1.9.0",
    "ava": "^1.0.0-beta.0",
    "coveralls": "^3.0.3",
    "eslint": "^5.16.0",
    "nyc": "^14.1.0",
    "standard": "^12.0.1",
    "supertest": "github:brave-intl/supertest",
    "typescript": "^3.3.4000"
  },
  "standard": {
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint/eslint-plugin"
    ]
  },
  "nyc": {
    "per-file": true,
    "all": true,
    "watermarks": {
      "lines": [
        90,
        100
      ],
      "functions": [
        90,
        100
      ],
      "branches": [
        90,
        100
      ],
      "statements": [
        90,
        100
      ]
    },
    "include": [
      "dist/eyeshade/**/*.js",
      "dist/ledger/**/*.js",
      "dist/balance/**/*.js",
      "dist/bat-utils/**/*.js",
      "dist/config.js"
    ],
    "reporter": [
      "lcov",
      "text-summary"
    ]
  }
}
