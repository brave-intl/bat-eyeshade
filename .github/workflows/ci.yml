# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
      - prod
      - dev
  pull_request:
    branches:
      - master
      - prod

env:
  REDEEMER_SIGNATOR_PUBLIC_KEY: bbe028009e744422bfc39b0e226633324d8c5fe0744c87c1018b88a488bc5899
  REDEEMER_WALLET_CARD_ID: f042845f-fa62-4022-8117-a476ec583a7b
  GRANT_SIGNATOR_PUBLIC_KEY: bbe028009e744422bfc39b0e226633324d8c5fe0744c87c1018b88a488bc5899
  GRANT_WALLET_CARD_ID: f042845f-fa62-4022-8117-a476ec583a7b
  BAT_RATIOS_URL: https://ratios-staging.mercury.basicattentiontoken.org
  TOKEN_LIST: 697ee69b-13b4-4a37-9cb6-923e7deaab9d
  BAT_RATIOS_TOKEN: ${{ secrets.BAT_RATIOS_TOKEN }}
  CAPTCHA_TOKEN: ${{ secrets.CAPTCHA_TOKEN }}
  GRANT_WALLET_PRIVATE_KEY: ${{ secrets.GRANT_WALLET_PRIVATE_KEY }}
  GRANT_WALLET_PUBLIC_KEY: ${{ secrets.GRANT_WALLET_PUBLIC_KEY }}
  REDEEMER_WALLET_PRIVATE_KEY: ${{ secrets.REDEEMER_WALLET_PRIVATE_KEY }}
  REDEEMER_WALLET_PUBLIC_KEY: ${{ secrets.REDEEMER_WALLET_PUBLIC_KEY }}
  UPHOLD_ACCESS_TOKEN: ${{ secrets.UPHOLD_ACCESS_TOKEN }}
  DEBUG: DEBUG=*,-babel*,-eslint*,mongo,ava,-kafka*,-sinek*,-postgres*,-superagent*

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      - name: Setup Node.js environment
        uses: actions/setup-node@c6fd00ceb9747fb23ffdf72987450a2664414867
        with:
          # Set always-auth in npmrc
          always-auth: true
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 14.15.1
          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          check-latest: true

      - run: npm install -g yarn

      - name: Docker Compose Install
        uses: KengoTODA/actions-setup-docker-compose@92cbaf8ac8c113c35e1cedd1182f217043fbdd00
        with:
          version: '1.25.4'

      - name: Cache node modules
        uses: actions/cache@0781355a23dac32fd3bac414512f4b903437991a
        with:
          path: ~/.npm
          key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: v1-npm-deps-

      - run: docker-compose pull
      - uses: satackey/action-docker-layer-caching@da67a6cd88114ce3e232893dc6d946efa225aefb
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        with:
          key: docker-cache-{hash}
          restore-keys: |
            docker-cache-

      # Runs a single command using the runners shell
      - name: Run security checks (audit + lint)
        run: yarn run security

      # Runs a set of commands using the runners shell
      - name: Stand up Postgres
        run: yarn run docker-up-dbs

      - name: Migrate DBs
        run: yarn run docker-migrate-dbs
      - name: Bring Up App Containers
        run: yarn run docker-up-detached
      - name: Print Checks
        run: |
          sleep 5
          docker ps

      - name: Test
        run: yarn run docker-test
      - name: Check Migrating Down
        run: yarn run docker-migrate-down-all
